#!/bin/bash
# Assign an ip address and hostname from user-data for amazon spot instances
# @author Cameron Gregory, http://www.bloke.com/

### BEGIN INIT INFO
# Provides:          ec2-elastic-ip
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      
# Short-Description: Assign ip address and hostname from user-data
### END INIT INFO

. /lib/lsb/init-functions

export PATH=/usr/local/bin:$PATH

if [ -f /etc/default/ec2-elastic-ip ]; then
	. /etc/default/ec2-elastic-ip
fi

rc=0

start()
{
	log_action_begin_msg "Loading user-data "

	#load IPv4 rules
	which aws > /dev/null
	if [ $? -ne 0 ]; then
		log_action_cont_msg " aws cli missing"
		rc=1
	fi
	which curl > /dev/null
	if [ $? -ne 0 ]; then
		log_action_cont_msg " curl missing"
		rc=1
	fi

	EC2_AVAIL_ZONE=`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone`
	EC2_REGION="`echo \"$EC2_AVAIL_ZONE\" | sed -e 's:\([0-9][0-9]*\)[a-z]*\$:\\1:'`"
	INSTANCE_ID=$(curl -s http://instance-data/latest/meta-data/instance-id)
	USERDATA=$(curl -s http://instance-data/latest/user-data)
	ELASTIC_IP=$(echo $USERDATA | awk 'BEGIN{RS="&";FS="="} /ip/ {print $2}')
	ELASTIC_HOSTNAME=$(echo $USERDATA | awk 'BEGIN{RS="&";FS="="} /hostname/ {print $2}')

	if [ -n "${ELASTIC_IP}" ]
	then
		log_action_cont_msg " IP ${ELASTIC_IP}"
		aws ec2 associate-address --region $EC2_REGION --instance-id $INSTANCE_ID --public-ip $ELASTIC_IP > /dev/null
	else
		log_action_cont_msg " No IP"
	fi

	if [ -n "${ELASTIC_HOSTNAME}" ]
	then
		log_action_cont_msg " Hostname ${ELASTIC_HOSTNAME}"
		hostname $ELASTIC_HOSTNAME
		#optionally setup the name of the instance as the "shortname"
		#INSTANCE_NAME=`hostname -s`
		#aws ec2 create-tags --region $EC2_REGION --resources $INSTANCE_ID --tags Key=Name,Value=$INSTANCE_NAME
		if [ -d /etc/default/ec2-elastic-ip.d/ssh/$ELASTIC_HOSTNAME ]; then
			log_action_cont_msg " Copy ssh host files"
			/bin/cp /etc/default/ec2-elastic-ip.d/ssh/$ELASTIC_HOSTNAME/* /etc/ssh
		else
			log_action_cont_msg " No ssh host files"
		fi

	else
		log_action_cont_msg " No hostname"
	fi

	log_action_end_msg $rc
}

case "$1" in
start|restart)
	start
	;;
stop)
	;;
*)
    echo "Usage: $0 {start|restart}" >&2
    exit 1
    ;;
esac

exit $rc
